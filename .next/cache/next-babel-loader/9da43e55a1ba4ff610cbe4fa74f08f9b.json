{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport strage from 'redux-persist/lib/storage';\nimport thunkMiddleware from 'redux-thunk'; //ステート初期化\n\nvar result = {\n  q_no: [],\n  question: null,\n  i: 0,\n  correct: 0,\n  incorrect: 0,\n  select: 0\n}; //Redux Persistの設定\n\nvar persistConfig = {\n  key: 'root' //    storage,\n\n}; //レデューサ\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : result;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SETINFO':\n      return {\n        q_no: action.rand_arr,\n        question: action.question,\n        i: state.i,\n        correct: state.correct,\n        incorrect: state.incorrect,\n        select: state.select\n      };\n\n    case 'CORRECT':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i + 1,\n        correct: state.correct + 1,\n        incorrect: state.incorrect,\n        select: 0\n      };\n\n    case 'INCORRECT':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i + 1,\n        correct: state.correct,\n        incorrect: state.incorrect + 1,\n        select: 0\n      };\n\n    case 'UPDATE1':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i,\n        correct: state.correct,\n        incorrect: state.incorrect,\n        select: 1\n      };\n\n    case 'UPDATE2':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i,\n        correct: state.correct,\n        incorrect: state.incorrect,\n        select: 2\n      };\n\n    case 'UPDATE3':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i,\n        correct: state.correct,\n        incorrect: state.incorrect,\n        select: 3\n      };\n\n    default:\n      return state;\n  }\n} //パーシストレデューサの作成\n//const persistedReducer = persistReducer(persistConfig, counterReducer)\n//initStore関数\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : result;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz/store.js"],"names":["createStore","applyMiddleware","persistStore","persistReducer","strage","thunkMiddleware","result","q_no","question","i","correct","incorrect","select","persistConfig","key","counterReducer","state","action","type","rand_arr","initStore"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport strage from 'redux-persist/lib/storage';\nimport thunkMiddleware from 'redux-thunk';\n\n//ステート初期化\nconst result = {\n    q_no : [],\n    question : null,\n    i : 0,\n    correct: 0,\n    incorrect: 0,\n    select: 0\n}\n\n//Redux Persistの設定\nconst persistConfig = {\n    key: 'root',\n//    storage,\n}\n\n//レデューサ\nfunction counterReducer (state = result, action){\n    switch (action.type){\n        case 'SETINFO':\n            return{\n                q_no : action.rand_arr,\n                question : action.question,\n                i : state.i,\n                correct : state.correct,\n                incorrect : state.incorrect,\n                select: state.select\n            };\n        case 'CORRECT':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i + 1,\n                correct : state.correct + 1,\n                incorrect : state.incorrect,\n                select: 0\n            };\n        case 'INCORRECT':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i + 1,\n                correct : state.correct,\n                incorrect : state.incorrect + 1,\n                select: 0\n            };\n        case 'UPDATE1':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i,\n                correct : state.correct,\n                incorrect : state.incorrect,\n                select: 1\n            };\n        case 'UPDATE2':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i,\n                correct : state.correct,\n                incorrect : state.incorrect,\n                select: 2\n            };    \n        case 'UPDATE3':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i,\n                correct : state.correct,\n                incorrect : state.incorrect,\n                select: 3\n            }; \n        default:\n            return state;\n    }\n}\n\n\n\n\n//パーシストレデューサの作成\n//const persistedReducer = persistReducer(persistConfig, counterReducer)\n\n//initStore関数\nexport function initStore(state=result){\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}