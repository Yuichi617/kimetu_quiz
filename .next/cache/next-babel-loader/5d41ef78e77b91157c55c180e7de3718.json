{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport json_data from './static/question_set.json'; // 0からmax-1までの整数を返す\n\nfunction getRandomInt(max) {\n  // ランダムな配列\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nlet array = [];\nlet max = 5;\nlet length = 10;\n\nfor (let i = 0; i < length; i++) {\n  array.push(getRandomInt(max));\n} //ステート初期化\n\n\nconst result = {\n  question: json_data,\n  i: 0,\n  correct: 0,\n  incorrect: 0,\n  select: 0\n}; //レデューサ\n\nfunction counterReducer(state = result, action) {\n  switch (action.type) {\n    case 'CORRECT':\n      return {\n        question: state.question,\n        i: state.i + 1,\n        correct: state.correct + 1,\n        incorrect: state.incorrect,\n        select: 0\n      };\n\n    case 'INCORRECT':\n      return {\n        question: state.question,\n        i: state.i + 1,\n        correct: state.correct,\n        incorrect: state.incorrect + 1,\n        select: 0\n      };\n\n    case 'UPDATE1':\n      return {\n        question: state.question,\n        i: state.i,\n        correct: state.correct,\n        incorrect: state.incorrect,\n        select: 1\n      };\n\n    case 'UPDATE2':\n      return {\n        question: state.question,\n        i: state.i,\n        correct: state.correct,\n        incorrect: state.incorrect,\n        select: 2\n      };\n\n    case 'UPDATE3':\n      return {\n        question: state.question,\n        i: state.i,\n        correct: state.correct,\n        incorrect: state.incorrect,\n        select: 3\n      };\n\n    default:\n      return state;\n  }\n} //initStore関数\n\n\nexport function initStore(state = result) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","json_data","getRandomInt","max","Math","floor","random","array","length","i","push","result","question","correct","incorrect","select","counterReducer","state","action","type","initStore"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport json_data from './static/question_set.json'\n\n// 0からmax-1までの整数を返す\nfunction getRandomInt(max) {\n    // ランダムな配列\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n  \n  let array = [];\n  let max = 5; \n  let length = 10\n  for (let i = 0; i < length; i++) {\n    array.push(getRandomInt(max));\n  }\n\n//ステート初期化\nconst result = {\n\n    question : json_data,\n    i : 0,\n    correct: 0,\n    incorrect: 0,\n    select: 0\n}\n\n//レデューサ\nfunction counterReducer (state = result, action){\n    switch (action.type){\n        case 'CORRECT':\n            return{\n                question : state.question,\n                i : state.i + 1,\n                correct : state.correct + 1,\n                incorrect : state.incorrect,\n                select: 0\n            };\n        case 'INCORRECT':\n            return{\n                question : state.question,\n                i : state.i + 1,\n                correct : state.correct,\n                incorrect : state.incorrect + 1,\n                select: 0\n            };\n        case 'UPDATE1':\n            return{\n                question : state.question,\n                i : state.i,\n                correct : state.correct,\n                incorrect : state.incorrect,\n                select: 1\n            };\n        case 'UPDATE2':\n            return{\n                question : state.question,\n                i : state.i,\n                correct : state.correct,\n                incorrect : state.incorrect,\n                select: 2\n            };    \n        case 'UPDATE3':\n            return{\n                question : state.question,\n                i : state.i,\n                correct : state.correct,\n                incorrect : state.incorrect,\n                select: 3\n            }; \n        default:\n            return state;\n    }\n}\n\n//initStore関数\nexport function initStore(state=result){\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}