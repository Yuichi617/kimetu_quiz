{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport json_data from './static/question_set.json';\nvar arr = [];\nvar numArr = [];\n\nfor (var i = 0; i < 15; i++) {\n  arr[i] = i;\n}\n\narr = shuffle(array); //ステート初期化\n\nvar result = {\n  q_no: arr,\n  question: json_data,\n  i: 0,\n  correct: 0,\n  incorrect: 0,\n  select: 0\n}; //レデューサ\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : result;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CORRECT':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i + 1,\n        correct: state.correct + 1,\n        incorrect: state.incorrect,\n        select: 0\n      };\n\n    case 'INCORRECT':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i + 1,\n        correct: state.correct,\n        incorrect: state.incorrect + 1,\n        select: 0\n      };\n\n    case 'UPDATE1':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i,\n        correct: state.correct,\n        incorrect: state.incorrect,\n        select: 1\n      };\n\n    case 'UPDATE2':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i,\n        correct: state.correct,\n        incorrect: state.incorrect,\n        select: 2\n      };\n\n    case 'UPDATE3':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i,\n        correct: state.correct,\n        incorrect: state.incorrect,\n        select: 3\n      };\n\n    default:\n      return state;\n  }\n} //initStore関数\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : result;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","json_data","arr","numArr","i","shuffle","array","result","q_no","question","correct","incorrect","select","counterReducer","state","action","type","initStore"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport json_data from './static/question_set.json'\n\nvar arr = [];\nvar numArr = []; \nfor(var i=0; i < 15; i++){\n    arr[i]=i;\n }\n arr = shuffle(array);\n\n//ステート初期化\nconst result = {\n    q_no : arr,\n    question : json_data,\n    i : 0,\n    correct: 0,\n    incorrect: 0,\n    select: 0\n}\n\n//レデューサ\nfunction counterReducer (state = result, action){\n    switch (action.type){\n        case 'CORRECT':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i + 1,\n                correct : state.correct + 1,\n                incorrect : state.incorrect,\n                select: 0\n            };\n        case 'INCORRECT':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i + 1,\n                correct : state.correct,\n                incorrect : state.incorrect + 1,\n                select: 0\n            };\n        case 'UPDATE1':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i,\n                correct : state.correct,\n                incorrect : state.incorrect,\n                select: 1\n            };\n        case 'UPDATE2':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i,\n                correct : state.correct,\n                incorrect : state.incorrect,\n                select: 2\n            };    \n        case 'UPDATE3':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i,\n                correct : state.correct,\n                incorrect : state.incorrect,\n                select: 3\n            }; \n        default:\n            return state;\n    }\n}\n\n//initStore関数\nexport function initStore(state=result){\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}