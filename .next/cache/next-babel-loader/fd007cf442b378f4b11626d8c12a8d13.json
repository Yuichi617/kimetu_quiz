{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; //ステート初期化\n\nconst result = {\n  i: 0,\n  correct: 0,\n  incorrect: 0\n}; //レデューサ\n\nfunction counterReducer(state = result, action) {\n  switch (action.type) {\n    case 'CORRECT':\n      return {\n        i: state.i + 1,\n        correct: state.correct + 1,\n        incorrect: state.incorrect\n      };\n\n    case 'INCORRECT':\n      return {\n        i: state.i + 1,\n        correct: state.correct,\n        incorrect: state.incorrect + 1\n      };\n\n    default:\n      return state;\n  }\n} //initStore関数\n\n\nexport function initStore(state = result) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","result","i","correct","incorrect","counterReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,CAAC,EAAG,CADO;AAEXC,EAAAA,OAAO,EAAE,CAFE;AAGXC,EAAAA,SAAS,EAAE;AAHA,CAAf,C,CAMA;;AACA,SAASC,cAAT,CAAyBC,KAAK,GAAGL,MAAjC,EAAyCM,MAAzC,EAAgD;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,aAAM;AACFN,QAAAA,CAAC,EAAGI,KAAK,CAACJ,CAAN,GAAU,CADZ;AAEFC,QAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAgB,CAFxB;AAGFC,QAAAA,SAAS,EAAGE,KAAK,CAACF;AAHhB,OAAN;;AAKJ,SAAK,WAAL;AACI,aAAM;AACFF,QAAAA,CAAC,EAAGI,KAAK,CAACJ,CAAN,GAAU,CADZ;AAEFC,QAAAA,OAAO,EAAGG,KAAK,CAACH,OAFd;AAGFC,QAAAA,SAAS,EAAGE,KAAK,CAACF,SAAN,GAAkB;AAH5B,OAAN;;AAKJ;AACI,aAAOE,KAAP;AAdR;AAgBH,C,CAED;;;AACA,OAAO,SAASG,SAAT,CAAmBH,KAAK,GAACL,MAAzB,EAAgC;AACnC,SAAOH,WAAW,CAACO,cAAD,EAAiBC,KAAjB,EAAwBP,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n//ステート初期化\nconst result = {\n    i : 0,\n    correct: 0,\n    incorrect: 0\n}\n\n//レデューサ\nfunction counterReducer (state = result, action){\n    switch (action.type){\n        case 'CORRECT':\n            return{\n                i : state.i + 1,\n                correct : state.correct + 1,\n                incorrect : state.incorrect\n            };\n        case 'INCORRECT':\n            return{\n                i : state.i + 1,\n                correct : state.correct,\n                incorrect : state.incorrect + 1\n            };\n        default:\n            return state;\n    }\n}\n\n//initStore関数\nexport function initStore(state=result){\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}