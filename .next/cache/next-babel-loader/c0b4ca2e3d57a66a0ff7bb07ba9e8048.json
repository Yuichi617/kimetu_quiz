{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; //ステート初期化\n\nvar result = {\n  correct: 0,\n  incorrect: 0\n}; //レデューサ\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : result;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} //initStore関数\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : result;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","result","correct","incorrect","counterReducer","state","action","type","message","count","initial","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,IAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE,CADE;AAEXC,EAAAA,SAAS,EAAE;AAFA,CAAf,C,CAKA;;AACA,SAASC,cAAT,GAAgD;AAAA,MAAvBC,KAAuB,uEAAfJ,MAAe;AAAA,MAAPK,MAAO;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAM;AACFC,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAc;AAFnB,OAAN;;AAIJ,SAAK,WAAL;AACI,aAAM;AACFD,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAc;AAFnB,OAAN;;AAIJ,SAAK,OAAL;AACI,aAAM;AACFD,QAAAA,OAAO,EAAE,OADP;AAEFC,QAAAA,KAAK,EAAEC,OAAO,CAACD;AAFb,OAAN;;AAIJ;AACI,aAAOJ,KAAP;AAjBR;AAmBH,C,CAED;;;AACA,OAAO,SAASM,SAAT,GAAgC;AAAA,MAAbN,KAAa,uEAAPJ,MAAO;AACnC,SAAOH,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EAAwBN,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n//ステート初期化\nconst result = {\n    correct: 0,\n    incorrect: 0\n}\n\n//レデューサ\nfunction counterReducer (state = result, action){\n    switch (action.type){\n        case 'INCREMENT':\n            return{\n                message: 'INCREMENT',\n                count: state.count + 1\n            };\n        case 'DECREMENT':\n            return{\n                message: 'DECREMENT',\n                count: state.count - 1\n            };\n        case 'RESET':\n            return{\n                message: 'RESET',\n                count: initial.count\n            };\n        default:\n            return state;\n    }\n}\n\n//initStore関数\nexport function initStore(state=result){\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}