{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; //ステート初期化\n\nconst trial = {\n  correct: 0,\n  incorrect: 0\n}; //レデューサ\n\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} //initStore関数\n\n\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","trial","correct","incorrect","counterReducer","state","initial","action","type","message","count","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,MAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,CADC;AAEVC,EAAAA,SAAS,EAAE;AAFD,CAAd,C,CAKA;;AACA,SAASC,cAAT,CAAyBC,KAAK,GAAGC,OAAjC,EAA0CC,MAA1C,EAAiD;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAM;AACFC,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,GAAc;AAFnB,OAAN;;AAIJ,SAAK,WAAL;AACI,aAAM;AACFD,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,GAAc;AAFnB,OAAN;;AAIJ,SAAK,OAAL;AACI,aAAM;AACFD,QAAAA,OAAO,EAAE,OADP;AAEFC,QAAAA,KAAK,EAAEJ,OAAO,CAACI;AAFb,OAAN;;AAIJ;AACI,aAAOL,KAAP;AAjBR;AAmBH,C,CAED;;;AACA,OAAO,SAASM,SAAT,CAAmBN,KAAK,GAACC,OAAzB,EAAiC;AACpC,SAAOR,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EAAwBN,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n//ステート初期化\nconst trial = {\n    correct: 0,\n    incorrect: 0\n}\n\n//レデューサ\nfunction counterReducer (state = initial, action){\n    switch (action.type){\n        case 'INCREMENT':\n            return{\n                message: 'INCREMENT',\n                count: state.count + 1\n            };\n        case 'DECREMENT':\n            return{\n                message: 'DECREMENT',\n                count: state.count - 1\n            };\n        case 'RESET':\n            return{\n                message: 'RESET',\n                count: initial.count\n            };\n        default:\n            return state;\n    }\n}\n\n//initStore関数\nexport function initStore(state=initial){\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}