{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunkMiddleware from 'redux-thunk'; //ステート初期化\n\nvar info = {\n  q_no: [],\n  question: null,\n  i: 0,\n  correct: 0,\n  incorrect: 0 //    select: 0\n\n}; //レデューサ\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : info;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SETINFO':\n      return {\n        q_no: action.rand_arr,\n        question: action.question,\n        i: 0,\n        correct: 0,\n        incorrect: 0,\n        select: 0\n      };\n\n    case 'CORRECT':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i + 1,\n        correct: state.correct + 1,\n        incorrect: state.incorrect,\n        select: 0\n      };\n\n    case 'INCORRECT':\n      return {\n        q_no: state.q_no,\n        question: state.question,\n        i: state.i + 1,\n        correct: state.correct,\n        incorrect: state.incorrect + 1,\n        select: 0\n      };\n    //case 'UPDATE1':\n    //    return{\n    //        q_no : state.q_no,\n    //        question : state.question,\n    //        i : state.i,\n    //        correct : state.correct,\n    //        incorrect : state.incorrect,\n    ///        select: 1\n    //    };\n    //case 'UPDATE2':\n    //    return{\n    //        q_no : state.q_no,\n    //        question : state.question,\n    //        i : state.i,\n    //        correct : state.correct,\n    //        incorrect : state.incorrect,\n    //        select: 2\n    //    };    \n    //case 'UPDATE3':\n    //    return{\n    //        q_no : state.q_no,\n    //        question : state.question,\n    //        i : state.i,\n    //        correct : state.correct,\n    //        incorrect : state.incorrect,\n    //       select: 3\n    //    }; \n\n    default:\n      return state;\n  }\n} //Redux Persistの設定\n\n\nvar persistConfig = {\n  key: 'root',\n  storage: storage\n}; //パーシストレデューサの作成\n\nvar persistedReducer = persistReducer(persistConfig, counterReducer); //ストア、パーシスターの作成\n\nvar store = createStore(persistedReducer, info, applyMiddleware(thunkMiddleware));\nvar pstore = persistStore(store); //initStore関数\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : info;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n} //export function initStore(state=info){\n//    return persistStore(createStore(persistedReducer, state, applyMiddleware(thunkMiddleware)))\n//}","map":{"version":3,"sources":["/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz/store.js"],"names":["createStore","applyMiddleware","persistStore","persistReducer","storage","thunkMiddleware","info","q_no","question","i","correct","incorrect","counterReducer","state","action","type","rand_arr","select","persistConfig","key","persistedReducer","store","pstore","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,IAAMC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAG,EADE;AAETC,EAAAA,QAAQ,EAAG,IAFF;AAGTC,EAAAA,CAAC,EAAG,CAHK;AAITC,EAAAA,OAAO,EAAE,CAJA;AAKTC,EAAAA,SAAS,EAAE,CALF,CAMb;;AANa,CAAb,C,CASA;;AACA,SAASC,cAAT,GAA8C;AAAA,MAArBC,KAAqB,uEAAbP,IAAa;AAAA,MAAPQ,MAAO;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,aAAM;AACFR,QAAAA,IAAI,EAAGO,MAAM,CAACE,QADZ;AAEFR,QAAAA,QAAQ,EAAGM,MAAM,CAACN,QAFhB;AAGFC,QAAAA,CAAC,EAAG,CAHF;AAIFC,QAAAA,OAAO,EAAG,CAJR;AAKFC,QAAAA,SAAS,EAAG,CALV;AAMFM,QAAAA,MAAM,EAAE;AANN,OAAN;;AAQJ,SAAK,SAAL;AACI,aAAM;AACFV,QAAAA,IAAI,EAAGM,KAAK,CAACN,IADX;AAEFC,QAAAA,QAAQ,EAAGK,KAAK,CAACL,QAFf;AAGFC,QAAAA,CAAC,EAAGI,KAAK,CAACJ,CAAN,GAAU,CAHZ;AAIFC,QAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAgB,CAJxB;AAKFC,QAAAA,SAAS,EAAGE,KAAK,CAACF,SALhB;AAMFM,QAAAA,MAAM,EAAE;AANN,OAAN;;AAQJ,SAAK,WAAL;AACI,aAAM;AACFV,QAAAA,IAAI,EAAGM,KAAK,CAACN,IADX;AAEFC,QAAAA,QAAQ,EAAGK,KAAK,CAACL,QAFf;AAGFC,QAAAA,CAAC,EAAGI,KAAK,CAACJ,CAAN,GAAU,CAHZ;AAIFC,QAAAA,OAAO,EAAGG,KAAK,CAACH,OAJd;AAKFC,QAAAA,SAAS,EAAGE,KAAK,CAACF,SAAN,GAAkB,CAL5B;AAMFM,QAAAA,MAAM,EAAE;AANN,OAAN;AAQJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACI,aAAOJ,KAAP;AAxDR;AA0DH,C,CAED;;;AACA,IAAMK,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBf,EAAAA,OAAO,EAAPA;AAFkB,CAAtB,C,CAKA;;AACA,IAAMgB,gBAAgB,GAAGjB,cAAc,CAACe,aAAD,EAAgBN,cAAhB,CAAvC,C,CAEA;;AACA,IAAIS,KAAK,GAAGrB,WAAW,CAACoB,gBAAD,EAAmBd,IAAnB,EAAyBL,eAAe,CAACI,eAAD,CAAxC,CAAvB;AACA,IAAIiB,MAAM,GAAGpB,YAAY,CAACmB,KAAD,CAAzB,C,CAEA;;AACA,OAAO,SAASE,SAAT,GAA8B;AAAA,MAAXV,KAAW,uEAALP,IAAK;AACjC,SAAON,WAAW,CAACY,cAAD,EAAiBC,KAAjB,EAAwBZ,eAAe,CAACI,eAAD,CAAvC,CAAlB;AACH,C,CAED;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunkMiddleware from 'redux-thunk';\n\n//ステート初期化\nconst info = {\n    q_no : [],\n    question : null,\n    i : 0,\n    correct: 0,\n    incorrect: 0\n//    select: 0\n}\n\n//レデューサ\nfunction counterReducer (state = info, action){\n    switch (action.type){\n        case 'SETINFO':\n            return{\n                q_no : action.rand_arr,\n                question : action.question,\n                i : 0,\n                correct : 0,\n                incorrect : 0,\n                select: 0\n            };\n        case 'CORRECT':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i + 1,\n                correct : state.correct + 1,\n                incorrect : state.incorrect,\n                select: 0\n            };\n        case 'INCORRECT':\n            return{\n                q_no : state.q_no,\n                question : state.question,\n                i : state.i + 1,\n                correct : state.correct,\n                incorrect : state.incorrect + 1,\n                select: 0\n            };\n        //case 'UPDATE1':\n        //    return{\n        //        q_no : state.q_no,\n        //        question : state.question,\n        //        i : state.i,\n        //        correct : state.correct,\n        //        incorrect : state.incorrect,\n        ///        select: 1\n        //    };\n        //case 'UPDATE2':\n        //    return{\n        //        q_no : state.q_no,\n        //        question : state.question,\n        //        i : state.i,\n        //        correct : state.correct,\n        //        incorrect : state.incorrect,\n        //        select: 2\n        //    };    \n        //case 'UPDATE3':\n        //    return{\n        //        q_no : state.q_no,\n        //        question : state.question,\n        //        i : state.i,\n        //        correct : state.correct,\n        //        incorrect : state.incorrect,\n        //       select: 3\n        //    }; \n        default:\n            return state;\n    }\n}\n\n//Redux Persistの設定\nconst persistConfig = {\n    key: 'root',\n    storage ,\n}\n\n//パーシストレデューサの作成\nconst persistedReducer = persistReducer(persistConfig, counterReducer)\n\n//ストア、パーシスターの作成\nlet store = createStore(persistedReducer, info, applyMiddleware(thunkMiddleware))\nlet pstore = persistStore(store)\n\n//initStore関数\nexport function initStore(state=info){\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n}\n\n//export function initStore(state=info){\n//    return persistStore(createStore(persistedReducer, state, applyMiddleware(thunkMiddleware)))\n//}"]},"metadata":{},"sourceType":"module"}